{"version":3,"sources":["redux/types.tsx","components/Loader/index.tsx","assets/img/Brand.png","components/NavBar/index.tsx","components/App.tsx","redux/userReducer.tsx","redux/index.tsx","redux/configureStore.tsx","index.tsx"],"names":["RECEIVE_USER_DATA","RECEIVE_USER_DETAILES","SET_PENDING","SET_ERROR","loader","className","animation","role","style","width","height","React","Component","module","exports","NavBar","Navbar","expand","Brand","to","alt","src","require","DashboardMain","lazy","Info","App","Container","fallback","Loader","path","exact","component","defaultState","user","userDetails","isLoginPending","error","rootReducer","combineReducers","userReducer","state","action","type","types","payload","composeEnhancer","window","compose","configureStore","createStore","applyMiddleware","thunkMiddleware","store","ReactDOM","render","document","getElementById"],"mappings":"yGAEA,wIAAO,IAAMA,EAAoB,oBACpBC,EAAwB,wBACxBC,EAAc,cACdC,EAAY,a,oGCFnBC,E,iLAEF,OACE,yBAAKC,UAAU,eACb,kBAAC,IAAD,CACEC,UAAU,SACVC,KAAK,SACLC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAEhC,0BAAML,UAAU,WAAhB,oB,GATWM,IAAMC,WAiBZR,O,uDCpBfS,EAAOC,QAAU,IAA0B,mC,yLCkB5BC,EAdU,WACvB,OACE,kBAACC,EAAA,EAAD,CAAQC,OAAO,MACb,kBAACD,EAAA,EAAOE,MAAR,KACE,kBAAC,IAAD,CAAMC,GAAG,eACP,yBACEC,IAAI,QACJC,IAAKC,EAAQ,UCJnBC,EAAgBZ,IAAMa,MAAK,kBAAM,uDACjCC,EAAOd,IAAMa,MAAK,kBAAM,8DAuBfE,E,iLAlBX,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,WAAD,CAAUC,SAAU,kBAACC,EAAA,EAAD,OAClB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,cAAcC,OAAO,EAAMC,UAAWT,IAE7C,kBAAC,IAAD,CACEO,KAAK,2BAA2BE,UAAWP,W,GAZvCb,a,wCCCLqB,EAA6B,CACxCC,KAAM,GACNC,YAAa,GACbC,gBAAgB,EAChBC,MAAO,MCZIC,EAAcC,YAAgB,CACvCC,YDcuB,WAAuE,IAAtEC,EAAqE,uDAA/CR,EAAcS,EAAiC,uCAC/F,OAAQA,EAAOC,MACb,KAAKC,IACH,OAAO,eACFH,EADL,CAEEL,gBAAgB,IAEpB,KAAKQ,IACH,OAAO,eACFH,EADL,CAEEJ,MAAOK,EAAOG,UAElB,KAAKD,IACH,OAAO,eAAKH,EAAZ,CAAmBP,KAAMQ,EAAOG,QAAST,gBAAgB,EAAOC,MAAO,OACzE,KAAKO,IACH,OAAO,eAAKH,EAAZ,CAAmBN,YAAaO,EAAOG,QAAST,gBAAgB,IAClE,QACE,OAAOK,ME/BPK,EAAkBC,OAAM,sCAA8DC,IAW7EC,EATQ,WAMrB,OALcC,YACZZ,EACAQ,EAAgBK,YAAgBC,Q,QCTpC,sCASO,IAAMC,EAAQJ,IAErBK,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUF,MAAOA,GACf,kBAAC,kBAAD,KACE,kBAAC,EAAD,SAING,SAASC,eAAe,W","file":"static/js/main.aea23438.chunk.js","sourcesContent":["import { User } from \"../models/interfaces\"\r\n\r\nexport const RECEIVE_USER_DATA = \"RECEIVE_USER_DATA\";\r\nexport const RECEIVE_USER_DETAILES = \"RECEIVE_USER_DETAILES\";\r\nexport const SET_PENDING = \"SET_PENDING\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\n\r\ninterface RECEIVE_USER_DATA {\r\n  type: \"RECEIVE_USER_DATA\";\r\n  payload: User;\r\n}\r\n\r\ninterface RECEIVE_USER_DETAILES {\r\n  type: \"RECEIVE_USER_DETAILES\";\r\n  payload: Array<any>;\r\n}\r\n\r\ninterface SET_PENDING {\r\n  type: \"SET_PENDING\";\r\n}\r\n\r\ninterface SET_ERROR {\r\n  type: \"SET_ERROR\";\r\n  payload: string;\r\n}\r\n\r\nexport type Action = RECEIVE_USER_DATA | RECEIVE_USER_DETAILES | SET_PENDING | SET_ERROR;","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nclass loader extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\" >\r\n        <Spinner\r\n          animation=\"border\"\r\n          role=\"status\"\r\n          style={{ width: '3rem', height: '3rem' }}\r\n        >\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default loader;\r\n","module.exports = __webpack_public_path__ + \"static/media/Brand.2238addf.png\";","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavBar: React.FC = () => {\r\n  return (\r\n    <Navbar expand=\"lg\">\r\n      <Navbar.Brand>\r\n        <Link to=\"/git_viewer\">\r\n          <img\r\n            alt=\"Brand\"\r\n            src={require(\"../../assets/img/Brand.png\")}\r\n          ></img>\r\n        </Link>\r\n      </Navbar.Brand>\r\n    </Navbar>\r\n  );\r\n}\r\nexport default NavBar;\r\n","import React, { Component, Suspense } from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport Loader from \"./Loader\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nconst DashboardMain = React.lazy(() => import(\"./Main\"));\r\nconst Info = React.lazy(() => import(\"./Info\"));\r\n\r\nclass App extends Component {\r\n  render() {\r\n\r\n    return (\r\n      <Container>\r\n        <Suspense fallback={<Loader />}>\r\n          <NavBar />\r\n          <Switch>\r\n            <Route\r\n              path=\"/git_viewer\" exact={true} component={DashboardMain}\r\n            />\r\n            <Route\r\n              path=\"/git_viewer/:owner/:info\" component={Info}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import * as types from \"./types\";\r\nimport { Action } from \"./types\"\r\nimport { User } from \"../models/interfaces\"\r\n\r\nexport interface InitialState {\r\n  user: User,\r\n  userDetails: Array<any>,\r\n  isLoginPending: boolean,\r\n  error: string | null\r\n}\r\n\r\nexport const defaultState: InitialState = {\r\n  user: {} as User,\r\n  userDetails: [],\r\n  isLoginPending: false,\r\n  error: null\r\n};\r\n\r\nexport const userReducer = (state: InitialState = defaultState, action: Action): InitialState => {\r\n  switch (action.type) {\r\n    case types.SET_PENDING:\r\n      return {\r\n        ...state,\r\n        isLoginPending: true\r\n      };\r\n    case types.SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    case types.RECEIVE_USER_DATA:\r\n      return { ...state, user: action.payload, isLoginPending: false, error: null };\r\n    case types.RECEIVE_USER_DETAILES:\r\n      return { ...state, userDetails: action.payload, isLoginPending: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { userReducer } from './userReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    userReducer: userReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { rootReducer } from './index';\r\n\r\nconst composeEnhancer = window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'] as typeof compose || compose;\r\n\r\nconst configureStore = () => {\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeEnhancer(applyMiddleware(thunkMiddleware))\r\n  );\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./assets/scss/style.scss\";\r\nimport configureStore from \"./redux/configureStore\";\r\nimport { ThroughProvider } from \"react-through\";\r\n\r\nexport const store = configureStore();\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <ThroughProvider>\r\n        <App />\r\n      </ThroughProvider>\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}