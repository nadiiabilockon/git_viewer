{"version":3,"sources":["components/InfoList.tsx","components/ShowItems.tsx","components/Commits.tsx","components/BranchesDiff.tsx","components/Info.tsx","redux/actions.tsx","services/APIsersices.tsx"],"names":["InfoList","useSelector","state","userReducer","userDetails","isLoginPending","user","info","useParams","dispatch","useDispatch","useEffect","fetchUserDetails","login","Loader","Card","Body","length","ListGroup","variant","className","title","RenderListItems","map","el","index","Item","key","Row","Col","md","xs","href","alt","src","avatar_url","name","default_branch","language","to","showItems","items","data","value","itemsList","i","push","toString","slice","author","message","date","Date","toJSON","Commits","props","useState","setItems","hasMoreItems","setMore","Object","keys","loadMore","setTimeout","prevState","hasMore","loader","useWindow","BranchesDiff","branches","setNames","firstBranch","setfirstBranch","secondBranch","setsecondBranch","commitsFirst","setCommitsFirst","commitsSecond","setCommitsSecond","owner","repo","getBranches","then","names","e","handleSelectChange","selected","setCommits","callback","sha","commit","selectOptions","label","Subtitle","Form","Group","options","filter","onChange","Button","onClick","getCommits","disabled","Info","history","useHistory","path","useRouteMatch","Header","Title","goBack","replace","c","toUpperCase","render","exact","fetchUserData","id","findUser","response","type","types","payload","catch","error","status","gotError","prop","getDetails","githubAPI","axios","get","branch"],"mappings":"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","file":"static/js/6.e140f372.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { Card, Row, Col, ListGroup } from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUserDetails } from \"../redux/actions\";\r\nimport { RootState } from \"../redux\";\r\nimport Loader from \"./Loader/index\";\r\nimport { UserDetails } from \"../models/interfaces\";\r\n\r\nexport default function InfoList() {\r\n  const { userDetails, isLoginPending, user } = useSelector(\r\n    (state: RootState) => state.userReducer\r\n  );\r\n  const { info } = useParams<any>();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserDetails(info, user.login));\r\n  }, []);\r\n\r\n  if (isLoginPending) {\r\n    return <Loader />;\r\n  } else {\r\n    return (\r\n      <Card.Body>\r\n        {!userDetails.length ? (\r\n          <div>No data</div>\r\n        ) : (\r\n          <ListGroup variant=\"flush\" className=\"list-unstyled team-members\">\r\n            <RenderListItems\r\n              userDetails={userDetails}\r\n              title={info}\r\n              user={user}\r\n            />\r\n          </ListGroup>\r\n        )}\r\n      </Card.Body>\r\n    );\r\n  }\r\n}\r\n\r\nconst RenderListItems = ({ userDetails, title, user }) => {\r\n  return userDetails.map(\r\n    (el: UserDetails, index: string | number | undefined) => {\r\n      return (\r\n        <ListGroup.Item key={index}>\r\n          {title !== \"repos\" ? (\r\n            <Row>\r\n              <Col md=\"1\" xs=\"3\">\r\n                <div className=\"avatar\">\r\n                  <a href={`https://github.com/${el.login}`}>\r\n                    <img\r\n                      alt=\"avatar\"\r\n                      className=\"img-circle img-no-padding img-responsive\"\r\n                      src={el.avatar_url}\r\n                    />\r\n                  </a>\r\n                </div>\r\n              </Col>\r\n              <Col md=\"11\" xs=\"9\">\r\n                {el.login}\r\n              </Col>\r\n            </Row>\r\n          ) : (\r\n            <Row>\r\n              <Col>\r\n                <Row>{el.name}</Row>\r\n                <Row>\r\n                  <Col md=\"5\" xs=\"5\">\r\n                    <span className=\"text-muted\">\r\n                      <small>Default branch</small>\r\n                      <br />\r\n                      <small>Language</small>\r\n                    </span>\r\n                  </Col>\r\n                  <Col md=\"7\" xs=\"7\" className=\"text-right\">\r\n                    <small>{el.default_branch}</small>\r\n                    <br />\r\n                    <small>{el.language}</small>\r\n                  </Col>\r\n                </Row>\r\n                <Row className=\"justify-content-between\">\r\n                  <Col>\r\n                    {/* <Link\r\n                      className=\"mt-2 btn btn-outline-info btn-sm\"\r\n                      to={`/git_viewer/${user.login}/${el.name}/compare/branches`}\r\n                    >\r\n                      Compare branches\r\n                    </Link> */}\r\n                  </Col>\r\n                  <Col className=\"text-right\">\r\n                    <Link\r\n                      className=\"mt-2 btn btn-outline-info btn-sm\"\r\n                      to={`/git_viewer/${user.login}/${title}/${el.name}/branches`}\r\n                    >\r\n                      Compare commits\r\n                    </Link>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </ListGroup.Item>\r\n      );\r\n    }\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { ListGroup, Row, Col } from \"react-bootstrap\";\r\n\r\nconst dateFormater = (value: Date) => {\r\n  return new Date(value).toJSON().slice(0, 10);\r\n};\r\n\r\nconst showItems = (items:number, data:object) => {\r\n    const itemsList: JSX.Element[] = [];\r\n\r\n    for (var i = 0; i < items; i++) {\r\n      let el = data[i];\r\n      if (el) {\r\n        itemsList.push(\r\n          <ListGroup.Item key={i}>\r\n            <Row>\r\n              <Col xs=\"4\">\r\n                <small className=\"font-italic\">Sha</small>\r\n              </Col>\r\n              <Col xs=\"8\" className=\"text-right\">\r\n                <small>{el[\"sha\"].toString().slice(0, 8)}</small>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs=\"4\">\r\n                <small className=\"font-italic\">Author</small>\r\n              </Col>\r\n              <Col xs=\"8\" className=\"text-right\">\r\n                <small>{el[\"commit\"].author.name}</small>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs=\"4\">\r\n                <small className=\"font-italic\">Message</small>\r\n              </Col>\r\n              <Col xs=\"8\" className=\"text-right\">\r\n                <small>{el[\"commit\"].message}</small>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs=\"4\">\r\n                <small className=\"font-italic\">Date</small>\r\n              </Col>\r\n              <Col xs=\"8\" className=\"text-right\">\r\n                <small>{dateFormater(el[\"commit\"].author.date)}</small>\r\n              </Col>\r\n            </Row>\r\n          </ListGroup.Item>\r\n        );\r\n      }\r\n    }\r\n    return itemsList;\r\n  };\r\n\r\n  export default showItems;","import React, { useState } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport showItems from './ShowItems'\r\n\r\nexport default function Commits(props: { data: Object[] }) {\r\n  const [items, setItems] = useState<number>(5);\r\n  const [hasMoreItems, setMore] = useState(true);\r\n\r\n  const loadMore = () => {\r\n    if (items >= Object.keys(props.data).length) {\r\n      setMore(false);\r\n    } else {\r\n      setTimeout(() => {\r\n        setItems(prevState => prevState + 5);\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      {Object.keys(props.data).length ? (\r\n        <InfiniteScroll\r\n          loadMore={loadMore}\r\n          hasMore={hasMoreItems}\r\n          loader={\"Loading...\"}\r\n          useWindow={true}\r\n        >\r\n          {showItems(items, props.data)}\r\n        </InfiniteScroll>\r\n      ) : null}\r\n    </ListGroup>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { getBranches, getCommits } from \"../services/APIsersices\";\r\nimport { Card, Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport Select from \"react-select\";\r\n\r\nimport Commits from \"./Commits\";\r\nimport { Commit } from \"../models//interfaces\";\r\n\r\ninterface SelectValue {\r\n  (selected: { value: string }, name: string): void;\r\n}\r\n\r\nexport default function BranchesDiff() {\r\n  const [branches, setNames] = useState<string[]>([]);\r\n  const [firstBranch, setfirstBranch] = useState<string>(\"\");\r\n  const [secondBranch, setsecondBranch] = useState<string>(\"\");\r\n  const [commitsFirst, setCommitsFirst] = useState<string[]>([]);\r\n  const [commitsSecond, setCommitsSecond] = useState<string[]>([]);\r\n\r\n  const { owner, repo } = useParams<any>();\r\n\r\n  useEffect(() => {\r\n    getBranches(owner, repo).then(data => {\r\n      const names = data.data.map(e => {\r\n        return e.name;\r\n      });\r\n      setNames(names);\r\n    });\r\n  }, []);\r\n\r\n  const handleSelectChange: SelectValue = (selected, name) => {\r\n    if (name === \"firstBranch\") {\r\n      setfirstBranch(selected.value);\r\n    } else {\r\n      setsecondBranch(selected.value);\r\n    }\r\n  };\r\n\r\n  // const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n  //     e.preventDefault();\r\n  //     getBranchesDiff(owner, repo, firstBranch, secondBranch)\r\n  //         .then(data => {\r\n  //             console.log(data.data)\r\n  //         })\r\n  // };\r\n\r\n  function setCommits(data: any, callback: any) {\r\n    const commits = data.map(\r\n      (e: Commit): Commit => {\r\n        return {\r\n          sha: e.sha,\r\n          commit: {\r\n            message: e.commit.message,\r\n            author: {\r\n              name: e.commit.author.name,\r\n              date: e.commit.author.date\r\n            }\r\n          }\r\n        };\r\n      }\r\n    );\r\n    callback(commits);\r\n  }\r\n\r\n  const handleCommits = () => {\r\n    getCommits(owner, repo, firstBranch).then(data =>\r\n      setCommits(data.data, setCommitsFirst)\r\n    );\r\n    getCommits(owner, repo, secondBranch).then(data =>\r\n      setCommits(data.data, setCommitsSecond)\r\n    );\r\n  };\r\n\r\n  const selectOptions = branches.map(el => {\r\n    return { value: el, label: el };\r\n  });\r\n\r\n  return (\r\n    <Card.Body>\r\n      <Card.Subtitle className=\"mb-2 text-muted\">Select branches</Card.Subtitle>\r\n      <Form>\r\n        <Row className=\"justify-content-center\">\r\n          <Col>\r\n            <Form.Group>\r\n              <Select\r\n                options={selectOptions.filter(el => el.value !== secondBranch)}\r\n                onChange={(e: { value: string }) =>\r\n                  handleSelectChange(e, \"firstBranch\")\r\n                }\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group>\r\n              <Select\r\n                options={selectOptions.filter(el => el.value !== firstBranch)}\r\n                onChange={(e: { value: string }) =>\r\n                  handleSelectChange(e, \"secondBranch\")\r\n                }\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"text-center\">\r\n          <Col>\r\n            <Button\r\n              className=\"btn-round\"\r\n              variant=\"dark\"\r\n              onClick={handleCommits}\r\n              disabled={!firstBranch || !secondBranch}\r\n            >\r\n              Show difference\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col xs=\"6\">\r\n          <Commits data={commitsFirst} />\r\n        </Col>\r\n        <Col xs=\"6\">\r\n          <Commits data={commitsSecond} />\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useParams,\r\n  useHistory,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { TiArrowBackOutline } from \"react-icons/ti\";\r\n\r\nimport InfoList from \"./InfoList\";\r\nimport BranchesDiff from \"./BranchesDiff\";\r\n\r\nexport default function Info() {\r\n  const renderInfoList = () => {\r\n    return <InfoList />;\r\n  };\r\n\r\n  const renderBranches = () => {\r\n    return <BranchesDiff />;\r\n  };\r\n\r\n  const error = () => {\r\n    return <div>Not correct path.</div>;\r\n  };\r\n\r\n  const history = useHistory();\r\n  const { info } = useParams<any>();\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title>\r\n          <a\r\n            className=\"back-link\"\r\n            onClick={() => history.goBack()}\r\n            title=\"Go back\"\r\n          >\r\n            <TiArrowBackOutline />\r\n          </a>{\" \"}\r\n          <span>{info.replace(/^\\w/, (c: string) => c.toUpperCase())}</span>\r\n        </Card.Title>\r\n      </Card.Header>\r\n      <Switch>\r\n        <Route path={path} render={renderInfoList} exact />\r\n        <Route path={`${path}/:repo/branches`} render={renderBranches} />\r\n        <Route render={error} />\r\n      </Switch>\r\n    </Card>\r\n  );\r\n}\r\n","import * as types from \"./types\";\r\nimport { findUser, getDetails } from \"../services/APIsersices\";\r\n\r\nexport function fetchUserData(id: string) {\r\n  return dispatch => {\r\n    findUser(id)\r\n      .then(response => {\r\n        dispatch(receiveUserData(response.data));\r\n      })\r\n      .catch(error => {\r\n        switch (error.response.status) {\r\n          case 404:\r\n            dispatch(gotError(\"No user with that email.\"));\r\n            break;\r\n          case 401:\r\n            dispatch(gotError(\"Invalid user.\"));\r\n            break;\r\n          default:\r\n            dispatch(gotError(\"Something wrong\"));\r\n            return;\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nfunction receiveUserData(data: any) {\r\n  return {\r\n    type: types.RECEIVE_USER_DATA,\r\n    payload: data\r\n  };\r\n}\r\n\r\nexport function fetchUserDetails(prop: string, user: string) {\r\n  return (dispatch) => {\r\n    dispatch({ type: types.SET_PENDING });\r\n    getDetails(user, prop)\r\n      .then(response => {\r\n        dispatch(receiveUserDetails(response.data));\r\n      })\r\n      .catch(error => {\r\n        dispatch(gotError(error));\r\n      });\r\n  };\r\n}\r\n\r\nfunction receiveUserDetails(data: any): types.Action {\r\n  return {\r\n    type: types.RECEIVE_USER_DETAILES,\r\n    payload: data\r\n  };\r\n}\r\n\r\nfunction gotError(data: string): types.Action {\r\n  return {\r\n    type: types.SET_ERROR,\r\n    payload: data\r\n  };\r\n}\r\n","import axios from \"axios\";\r\nimport {\r\n  User,\r\n  ServerResponse,\r\n  UserDetails,\r\n  Commit,\r\n  Branch\r\n} from \"../models/interfaces\";\r\n\r\nconst githubAPI = \"https://api.github.com/\";\r\n\r\nexport function findUser(id: string): Promise<ServerResponse<User>> {\r\n  return axios.get(`${githubAPI}users/${id}`);\r\n}\r\n\r\nexport function getDetails(\r\n  id: string,\r\n  prop: string\r\n): Promise<ServerResponse<Array<UserDetails>>> {\r\n  return axios.get(`${githubAPI}users/${id}/${prop}`);\r\n}\r\n\r\nexport function getCommits(\r\n  id: string,\r\n  repo: string,\r\n  branch:string\r\n): Promise<ServerResponse<Array<Commit>>> {\r\n  return axios.get(`${githubAPI}repos/${id}/${repo}/commits?sha=${branch}`);\r\n}\r\n\r\nexport function getBranches(\r\n  id: string,\r\n  repo: string\r\n): Promise<ServerResponse<Array<Branch>>> {\r\n  return axios.get(`${githubAPI}repos/${id}/${repo}/branches`);\r\n}\r\n\r\nexport function getBranchesDiff(\r\n  id: string,\r\n  repo: string,\r\n  firstBranch: string,\r\n  secondBranch: string\r\n): Promise<ServerResponse<Object>> {\r\n  return axios.get(`${githubAPI}repos/${id}/${repo}/compare/${firstBranch}...${secondBranch}`);\r\n}"],"sourceRoot":""}