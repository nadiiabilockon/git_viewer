{"version":3,"sources":["redux/types.js","App/layout/Loader/index.js","route.js","App/layout/NavBar/index.js","App/App.js","redux/reducers.js","redux/configureStore.js","index.js"],"names":["RECEIVE_USER_DATA","RECEIVE_USER_DETAILES","loader","className","route","path","exact","name","component","React","lazy","NavBar","Navbar","expand","Brand","href","Component","App","menu","routes","map","index","Route","key","render","props","Container","fallback","Loader","Switch","initialState","user","userDetails","rootReducer","state","action","type","types","payload","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","createStore","applyMiddleware","thunkMiddleware","store","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"yGAAA,oEAAO,IAAMA,EAAoB,oBACpBC,EAAwB,yB,mJCWtBC,EAVA,WACX,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,mBCShBC,EAVD,CACZ,CAAEC,KAAM,cAAeC,OAAO,EAAMC,KAAM,OAAQC,UAJ9BC,IAAMC,MAAK,kBAAM,+DAKrC,CACEL,KAAM,wBACNC,OAAO,EACPC,KAAM,WACNC,UARaC,IAAMC,MAAK,kBAAM,wD,QCmBnBC,E,iLAdX,OACE,kBAACC,EAAA,EAAD,CAAQC,OAAO,MACb,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,eAAnB,mB,GAJaC,aC8BNC,E,iLA1BP,IAAMC,EAAOC,EAAOC,KAAI,SAAChB,EAAOiB,GAC9B,OAAQjB,EAAMI,UACV,kBAACc,EAAA,EAAD,CACIC,IAAKF,EACLhB,KAAMD,EAAMC,KACZC,MAAOF,EAAME,MACbC,KAAMH,EAAMG,KACZiB,OAAQ,SAAAC,GAAK,OACT,kBAACrB,EAAMI,UAAciB,MAE5B,QAGP,OACQ,kBAACC,EAAA,EAAD,KACI,kBAAC,WAAD,CAAUC,SAAU,kBAACC,EAAD,OACpB,kBAAC,EAAD,MACI,kBAACC,EAAA,EAAD,KACKX,S,GApBXF,a,gDCNLc,EAAe,CAC1BC,KAAM,GACNC,YAAa,IAGFC,EAAc,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCAC3D,OAAQA,EAAOC,MACb,KAAKC,IACH,OAAO,eAAKH,EAAZ,CAAmBH,KAAMI,EAAOG,UAClC,KAAKD,IACH,OAAO,eAAKH,EAAZ,CAAmBF,YAAaG,EAAOG,UACzC,QACE,OAAOJ,ICVPK,EAAkBC,OAAOC,sCAAwCC,IAYxDC,EAVe,WAO5B,OANcC,YACZX,EACAH,EACCS,EAAgBM,YAAgBC,Q,QCVrC,sCASO,IAAMC,EAAQJ,EAAeA,GACpCK,IAASxB,OACP,kBAACyB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAUF,MAAOA,GACf,kBAAC,kBAAD,KACE,kBAAC,EAAD,SAING,SAASC,eAAe,U","file":"static/js/main.ced0b50b.chunk.js","sourcesContent":["export const RECEIVE_USER_DATA = \"RECEIVE_USER_DATA\";\r\nexport const RECEIVE_USER_DETAILES = \"RECEIVE_USER_DETAILES\";\r\n","import React from 'react';\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className=\"loader-bg\">\r\n            <div className=\"loader-track\">\r\n                <div className=\"loader-fill\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default loader;","import React from 'react';\r\n\r\nconst DashboardMain = React.lazy(() => import(\"./components/Main\"));\r\nconst InfoList = React.lazy(() => import(\"./components/InfoList\"));\r\n\r\nconst route = [\r\n  { path: \"/git_viewer\", exact: true, name: \"Main\", component: DashboardMain },\r\n  {\r\n    path: \"/git_viewer/user/info\",\r\n    exact: true,\r\n    name: \"InfoList\",\r\n    component: InfoList\r\n  }\r\n];\r\n\r\nexport default route;","import React, { Component } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav\r\n} from \"react-bootstrap\";\r\n\r\nclass NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar expand=\"lg\">\r\n        <Navbar.Brand href=\"/git_viewer\">Git viewer</Navbar.Brand>\r\n        {/* <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"#home\">Home</Nav.Link>\r\n              <Nav.Link href=\"#link\">Link</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse> */}\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\nexport default NavBar","import React, { Component, Suspense } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nimport Loader from './layout/Loader'\r\nimport routes from \"../route\";\r\nimport NavBar from \"./layout/NavBar\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        const menu = routes.map((route, index) => {\r\n          return (route.component) ? (\r\n              <Route\r\n                  key={index}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  name={route.name}\r\n                  render={props => (\r\n                      <route.component {...props} />\r\n                  )} />\r\n          ) : (null);\r\n        });\r\n\r\n        return (\r\n                <Container>\r\n                    <Suspense fallback={<Loader/>}>\r\n                    <NavBar />\r\n                        <Switch>\r\n                            {menu}\r\n                        </Switch>\r\n                    </Suspense>\r\n                </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import * as types from \"./types\";\r\n\r\nexport const initialState = {\r\n  user: {},\r\n  userDetails: {}\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.RECEIVE_USER_DATA:\r\n      return { ...state, user: action.payload };\r\n    case types.RECEIVE_USER_DETAILES:\r\n      return { ...state, userDetails: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { rootReducer, initialState } from \"./reducers\";\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const configureStore = () => {\r\n  const store = createStore(\r\n    rootReducer, // root reducer\r\n    initialState,\r\n     composeEnhancer(applyMiddleware(thunkMiddleware))\r\n  );\r\n\r\n  return store;\r\n};\r\n\r\nexport default configureStore;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App/App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./assets/scss/style.scss\";\r\nimport configureStore from \"./redux/configureStore\";\r\nimport { ThroughProvider } from \"react-through\";\r\n\r\nexport const store = configureStore(configureStore);\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <ThroughProvider>\r\n        <App />\r\n      </ThroughProvider>\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}