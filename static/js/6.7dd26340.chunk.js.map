{"version":3,"sources":["components/UserInfo/ReposInfoItem.tsx","components/UserInfo/ConectionsInfoItem.tsx","components/UserInfo/InfoItems.tsx","components/UserInfo/InfoList.tsx","components/BranchDetails/BranchSelect.tsx","components/BranchDetails/BranchForm.tsx","components/BranchDetails/CommitItemElement.tsx","components/BranchDetails/CommitItems.tsx","components/BranchDetails/Commits.tsx","components/BranchDetails/BranchMain.tsx","components/UserInfo/Info.tsx","redux/actions.tsx","services/APIsersices.tsx"],"names":["ReposInfoItem","repoName","defaultBranch","language","login","title","Row","Col","md","xs","className","to","ConectionsInfoItem","avatar","href","alt","src","InfoItems","userDetails","user","map","el","index","ListGroup","Item","key","avatar_url","name","default_branch","InfoList","useSelector","state","userReducer","isLoginPending","info","useParams","dispatch","useDispatch","useEffect","fetchUserDetails","Loader","Card","Body","length","variant","BranchSelect","props","useContext","BrancContext","selectOptions","handleSelectChange","firstBranch","secondBranch","checked","options","filter","value","onChange","e","BranchForm","handleCommits","Form","Group","Button","onClick","disabled","CommitItemElement","content","CommitItems","items","data","commitsList","i","commitDate","author","date","Date","toJSON","slice","push","toString","message","Commits","useState","setItems","hasMoreItems","setMore","Object","keys","loadMore","setTimeout","prevState","hasMore","loader","useWindow","React","createContext","BranchMain","branches","setNames","setfirstBranch","setsecondBranch","commitsFirst","setCommitsFirst","commitsSecond","setCommitsSecond","owner","repo","getBranches","then","names","setCommits","callback","sha","commit","label","Subtitle","Provider","selected","getCommits","Info","history","useHistory","path","useRouteMatch","Header","Title","goBack","replace","c","toUpperCase","render","exact","fetchUserData","id","findUser","response","type","types","payload","catch","error","status","gotError","prop","getDetails","githubAPI","axios","get","branch"],"mappings":"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","file":"static/js/6.7dd26340.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ReposInfoItem({\r\n  repoName,\r\n  defaultBranch,\r\n  language,\r\n  login,\r\n  title,\r\n}) {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <Row>{repoName}</Row>\r\n        <Row>\r\n          <Col md=\"5\" xs=\"5\">\r\n            <span className=\"text-muted\">\r\n              <small>Default branch</small>\r\n              <br />\r\n              <small>Language</small>\r\n            </span>\r\n          </Col>\r\n          <Col md=\"7\" xs=\"7\" className=\"text-right\">\r\n            <small>{defaultBranch}</small>\r\n            <br />\r\n            <small>{language}</small>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-between\">\r\n          <Col>\r\n            {/* <Link\r\n                      className=\"mt-2 btn btn-outline-info btn-sm\"\r\n                      to={`/git_viewer/${user.login}/${repoName}/compare/branches`}\r\n                    >\r\n                      Compare branches\r\n                    </Link> */}\r\n          </Col>\r\n          <Col className=\"text-right\">\r\n            <Link\r\n              className=\"mt-2 btn btn-outline-info btn-sm\"\r\n              to={`/${login}/${title}/${repoName}/branches`}\r\n            >\r\n              Compare commits\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function ConectionsInfoItem({ login, avatar }) {\r\n  return (\r\n    <Row>\r\n      <Col md=\"1\" xs=\"3\">\r\n        <div className=\"avatar\">\r\n          <a href={`https://github.com/${login}`}>\r\n            <img\r\n              alt=\"avatar\"\r\n              className=\"img-circle img-no-padding img-responsive\"\r\n              src={avatar}\r\n            />\r\n          </a>\r\n        </div>\r\n      </Col>\r\n      <Col md=\"11\" xs=\"9\">\r\n        {login}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { UserDetails } from \"../../models/interfaces\";\r\nimport ReposInfoItem from \"./ReposInfoItem\";\r\nimport ConectionsInfoItem from \"./ConectionsInfoItem\";\r\n\r\nexport const InfoItems = ({ userDetails, title, user }) => {\r\n  return userDetails.map((el: UserDetails, index: string | number) => {\r\n    return (\r\n      <ListGroup.Item key={index}>\r\n        {title !== \"repos\" ? (\r\n          <ConectionsInfoItem login={el.login} avatar={el.avatar_url} />\r\n        ) : (\r\n          <ReposInfoItem\r\n            repoName={el.name}\r\n            defaultBranch={el.default_branch}\r\n            language={el.language}\r\n            login={user.login}\r\n            title={title}\r\n          />\r\n        )}\r\n      </ListGroup.Item>\r\n    );\r\n  });\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUserDetails } from \"../../redux/actions\";\r\nimport { RootState } from \"../../redux\";\r\nimport Loader from \"../Loader/index\";\r\nimport { InfoItems } from \"./InfoItems\";\r\n\r\nexport default function InfoList() {\r\n  const { userDetails, isLoginPending, user } = useSelector(\r\n    (state: RootState) => state.userReducer\r\n  );\r\n  const { info } = useParams<any>();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserDetails(info, user.login));\r\n  }, []);\r\n\r\n  if (isLoginPending) {\r\n    return <Loader />;\r\n  } else {\r\n    return (\r\n      <Card.Body>\r\n        {!userDetails.length ? (\r\n          <div>No data</div>\r\n        ) : (\r\n          <ListGroup variant=\"flush\" className=\"list-unstyled team-members\">\r\n            <InfoItems userDetails={userDetails} title={info} user={user} />\r\n          </ListGroup>\r\n        )}\r\n      </Card.Body>\r\n    );\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { BrancContext } from \"./BranchMain\";\r\n\r\nexport default function BranchSelect(props: { name: string }) {\r\n  const {\r\n    selectOptions,\r\n    handleSelectChange,\r\n    firstBranch,\r\n    secondBranch,\r\n  } = useContext(BrancContext);\r\n\r\n  const checked = props.name === \"firstBranch\" ? secondBranch : firstBranch;\r\n  \r\n  return (\r\n    <Select\r\n      options={selectOptions!.filter((el) => el.value !== checked)}\r\n      onChange={(e: { value: string }) => handleSelectChange!(e, props.name)}\r\n    />\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Form, Row, Col, Button } from \"react-bootstrap\";\r\nimport BranchSelect from \"./BranchSelect\"\r\nimport { BrancContext } from \"./BranchMain\";\r\n\r\nexport default function BranchForm() {\r\n  const {\r\n    handleCommits,\r\n    firstBranch,\r\n    secondBranch\r\n  } = useContext(BrancContext);\r\n\r\n  return (\r\n    <Form>\r\n      <Row className=\"justify-content-center\">\r\n        <Col>\r\n          <Form.Group>\r\n            <BranchSelect name=\"firstBranch\" />\r\n          </Form.Group>\r\n        </Col>\r\n        <Col>\r\n          <Form.Group>\r\n            <BranchSelect name=\"secondBranch\" />\r\n          </Form.Group>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"text-center\">\r\n        <Col>\r\n          <Button\r\n            className=\"btn-round\"\r\n            variant=\"dark\"\r\n            onClick={handleCommits}\r\n            disabled={!firstBranch || !secondBranch}\r\n          >\r\n            Show difference\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function CommitItemElement(props: {\r\n  title: string;\r\n  content: string;\r\n}) {\r\n  return (\r\n    <Row>\r\n      <Col xs=\"4\">\r\n        <small className=\"font-italic\">{props.title}</small>\r\n      </Col>\r\n      <Col xs=\"8\" className=\"text-right\">\r\n        <small>{props.content}</small>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport CommitItemElement from \"./CommitItemElement\";\r\n\r\nconst dateFormater = (value: Date) => {\r\n  return new Date(value).toJSON().slice(0, 10);\r\n};\r\n\r\nconst CommitItems = (items: number, data: object) => {\r\n  const commitsList: JSX.Element[] = [];\r\n\r\n  for (var i = 0; i < items; i++) {\r\n    let el = data[i];\r\n    if (el) {\r\n      const commitDate = dateFormater(el[\"commit\"].author.date);\r\n      commitsList.push(\r\n        <ListGroup.Item key={i}>\r\n          <CommitItemElement\r\n            title=\"Sha\"\r\n            content={el[\"sha\"].toString().slice(0, 8)}\r\n          />\r\n          <CommitItemElement\r\n            title=\"Author\"\r\n            content={el[\"commit\"].author.name}\r\n          />\r\n          <CommitItemElement title=\"Message\" content={el[\"commit\"].message} />\r\n          <CommitItemElement title=\"Date\" content={commitDate} />\r\n        </ListGroup.Item>\r\n      );\r\n    }\r\n  }\r\n  return commitsList;\r\n};\r\n\r\nexport default CommitItems;\r\n","import React, { useState } from \"react\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport CommitItems from './CommitItems'\r\n\r\nexport default function Commits(props: { data: Object[] }) {\r\n  const [items, setItems] = useState<number>(5);\r\n  const [hasMoreItems, setMore] = useState(true);\r\n\r\n  const loadMore = () => {\r\n    if (items >= Object.keys(props.data).length) {\r\n      setMore(false);\r\n    } else {\r\n      setTimeout(() => {\r\n        setItems(prevState => prevState + 5);\r\n      }, 1500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      {Object.keys(props.data).length ? (\r\n        <InfiniteScroll\r\n          loadMore={loadMore}\r\n          hasMore={hasMoreItems}\r\n          loader={\"Loading...\"}\r\n          useWindow={true}\r\n        >\r\n          {CommitItems(items, props.data)}\r\n        </InfiniteScroll>\r\n      ) : null}\r\n    </ListGroup>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport { getBranches, getCommits } from \"../../services/APIsersices\";\r\nimport BranchForm from \"./BranchForm\";\r\nimport Commits from \"./Commits\";\r\nimport { Commit } from \"../../models/interfaces\";\r\n\r\ninterface SelectValue {\r\n  (selected: { value: string }, name: string): void;\r\n}\r\n\r\ntype ContextProps = {\r\n  selectOptions: { value: string; label: string }[];\r\n  handleSelectChange: SelectValue;\r\n  handleCommits: () => void;\r\n  firstBranch: string;\r\n  secondBranch: string;\r\n};\r\n\r\nexport const BrancContext = React.createContext<Partial<ContextProps>>({});\r\n\r\nexport default function BranchMain() {\r\n  const [branches, setNames] = useState<string[]>([]);\r\n  const [firstBranch, setfirstBranch] = useState<string>(\"\");\r\n  const [secondBranch, setsecondBranch] = useState<string>(\"\");\r\n  const [commitsFirst, setCommitsFirst] = useState<string[]>([]);\r\n  const [commitsSecond, setCommitsSecond] = useState<string[]>([]);\r\n\r\n  const { owner, repo } = useParams<any>();\r\n\r\n  useEffect(() => {\r\n    getBranches(owner, repo).then((data) => {\r\n      const names = data.data.map((e) => {\r\n        return e.name;\r\n      });\r\n      setNames(names);\r\n    });\r\n  }, []);\r\n\r\n  const handleSelectChange: SelectValue = (selected, name) => {\r\n    if (name === \"firstBranch\") {\r\n      setfirstBranch(selected.value);\r\n    } else {\r\n      setsecondBranch(selected.value);\r\n    }\r\n  };\r\n\r\n  // const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n  //     e.preventDefault();\r\n  //     getBranchesDiff(owner, repo, firstBranch, secondBranch)\r\n  //         .then(data => {\r\n  //             console.log(data.data)\r\n  //         })\r\n  // };\r\n\r\n  function setCommits(data: any, callback: any) {\r\n    const commits = data.map(\r\n      (e: Commit): Commit => {\r\n        return {\r\n          sha: e.sha,\r\n          commit: {\r\n            message: e.commit.message,\r\n            author: {\r\n              name: e.commit.author.name,\r\n              date: e.commit.author.date,\r\n            },\r\n          },\r\n        };\r\n      }\r\n    );\r\n    callback(commits);\r\n  }\r\n\r\n  const handleCommits = () => {\r\n    getCommits(owner, repo, firstBranch).then((data) =>\r\n      setCommits(data.data, setCommitsFirst)\r\n    );\r\n    getCommits(owner, repo, secondBranch).then((data) =>\r\n      setCommits(data.data, setCommitsSecond)\r\n    );\r\n  };\r\n\r\n  const selectOptions = branches.map((el) => {\r\n    return { value: el, label: el };\r\n  });\r\n\r\n  return (\r\n    <Card.Body>\r\n      <Card.Subtitle className=\"mb-2 text-muted\">Select branches</Card.Subtitle>\r\n      <BrancContext.Provider\r\n        value={{\r\n          selectOptions,\r\n          handleSelectChange,\r\n          handleCommits,\r\n          firstBranch,\r\n          secondBranch,\r\n        }}\r\n      >\r\n        <BranchForm />\r\n      </BrancContext.Provider>\r\n      <hr></hr>\r\n      <Row>\r\n        <Col xs=\"6\">\r\n          <Commits data={commitsFirst} />\r\n        </Col>\r\n        <Col xs=\"6\">\r\n          <Commits data={commitsSecond} />\r\n        </Col>\r\n      </Row>\r\n    </Card.Body>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useParams,\r\n  useHistory,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { TiArrowBackOutline } from \"react-icons/ti\";\r\n\r\nimport InfoList from \"./InfoList\";\r\nimport BranchMain from \"../BranchDetails/BranchMain\";\r\n\r\nexport default function Info() {\r\n  const renderInfoList = () => {\r\n    return <InfoList />;\r\n  };\r\n\r\n  const renderBranches = () => {\r\n    return <BranchMain />;\r\n  };\r\n\r\n  const error = () => {\r\n    return <div>Not correct path.</div>;\r\n  };\r\n\r\n  const history = useHistory();\r\n  const { info } = useParams<any>();\r\n  const { path } = useRouteMatch();\r\n\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title>\r\n          <a\r\n            className=\"back-link\"\r\n            onClick={() => history.goBack()}\r\n            title=\"Go back\"\r\n          >\r\n            <TiArrowBackOutline />\r\n          </a>{\" \"}\r\n          <span>{info.replace(/^\\w/, (c: string) => c.toUpperCase())}</span>\r\n        </Card.Title>\r\n      </Card.Header>\r\n      <Switch>\r\n        <Route path={path} render={renderInfoList} exact />\r\n        <Route path={`${path}/:repo/branches`} render={renderBranches} />\r\n        <Route render={error} />\r\n      </Switch>\r\n    </Card>\r\n  );\r\n}\r\n","import * as types from \"./types\";\r\nimport { findUser, getDetails } from \"../services/APIsersices\";\r\n\r\nexport function fetchUserData(id: string) {\r\n  return dispatch => {\r\n    findUser(id)\r\n      .then(response => {\r\n        dispatch(receiveUserData(response.data));\r\n      })\r\n      .catch(error => {\r\n        switch (error.response.status) {\r\n          case 404:\r\n            dispatch(gotError(\"No user with that email.\"));\r\n            break;\r\n          case 401:\r\n            dispatch(gotError(\"Invalid user.\"));\r\n            break;\r\n          default:\r\n            dispatch(gotError(\"Something wrong\"));\r\n            return;\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nfunction receiveUserData(data: any) {\r\n  return {\r\n    type: types.RECEIVE_USER_DATA,\r\n    payload: data\r\n  };\r\n}\r\n\r\nexport function fetchUserDetails(prop: string, user: string) {\r\n  return (dispatch) => {\r\n    dispatch({ type: types.SET_PENDING });\r\n    getDetails(user, prop)\r\n      .then(response => {\r\n        dispatch(receiveUserDetails(response.data));\r\n      })\r\n      .catch(error => {\r\n        dispatch(gotError(error));\r\n      });\r\n  };\r\n}\r\n\r\nfunction receiveUserDetails(data: any): types.Action {\r\n  return {\r\n    type: types.RECEIVE_USER_DETAILES,\r\n    payload: data\r\n  };\r\n}\r\n\r\nfunction gotError(data: string): types.Action {\r\n  return {\r\n    type: types.SET_ERROR,\r\n    payload: data\r\n  };\r\n}\r\n","import axios from \"axios\";\r\nimport {\r\n  User,\r\n  ServerResponse,\r\n  UserDetails,\r\n  Commit,\r\n  Branch\r\n} from \"../models/interfaces\";\r\n\r\nconst githubAPI = \"https://api.github.com/\";\r\n\r\nexport function findUser(id: string): Promise<ServerResponse<User>> {\r\n  return axios.get(`${githubAPI}users/${id}`);\r\n}\r\n\r\nexport function getDetails(\r\n  id: string,\r\n  prop: string\r\n): Promise<ServerResponse<Array<UserDetails>>> {\r\n  return axios.get(`${githubAPI}users/${id}/${prop}`);\r\n}\r\n\r\nexport function getCommits(\r\n  id: string,\r\n  repo: string,\r\n  branch:string\r\n): Promise<ServerResponse<Array<Commit>>> {\r\n  return axios.get(`${githubAPI}repos/${id}/${repo}/commits?sha=${branch}`);\r\n}\r\n\r\nexport function getBranches(\r\n  id: string,\r\n  repo: string\r\n): Promise<ServerResponse<Array<Branch>>> {\r\n  return axios.get(`${githubAPI}repos/${id}/${repo}/branches`);\r\n}\r\n\r\nexport function getBranchesDiff(\r\n  id: string,\r\n  repo: string,\r\n  firstBranch: string,\r\n  secondBranch: string\r\n): Promise<ServerResponse<Object>> {\r\n  return axios.get(`${githubAPI}repos/${id}/${repo}/compare/${firstBranch}...${secondBranch}`);\r\n}"],"sourceRoot":""}