{"version":3,"sources":["assets/img/damir-bosnjak.jpg","components/Search.js","components/User.js","components/Main.js","services/APIsersices.js","redux/actions.js"],"names":["module","exports","Search","useState","userInput","setUserInput","dispatch","useDispatch","error","useSelector","state","Card","className","Body","Form","onSubmit","e","preventDefault","fetchUserData","Row","Col","md","FormGroup","Control","placeholder","type","onChange","target","value","Button","variant","User","props","name","setName","userName","setUserName","followers","setFollowers","following","setFollowing","repos","setRepos","avatar","setAvatar","profileBio","setBio","user","useEffect","setData","login","public_repos","avatar_url","bio","cardFooterData","prop","info","img","alt","src","require","href","Footer","map","el","index","key","lg","xs","Link","to","Main","Object","keys","length","Container","githubAPI","findUser","id","axios","get","getDetails","getBranchDetails","branch","getCommits","then","response","data","types","payload","catch","status","gotError","fetchUserDetails"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,2C,iJCK5B,SAASC,IAAU,IAAD,EACGC,mBAAS,IADZ,mBACxBC,EADwB,KACbC,EADa,KAEzBC,EAAWC,cACTC,EAAUC,aAAY,SAAAC,GAAK,MAAK,CACtCF,MAAOE,EAAMF,UADPA,MAYR,OACE,kBAACG,EAAA,EAAD,CAAMC,UAAU,aACd,wBAAIA,UAAU,oBAAd,eACA,kBAACD,EAAA,EAAKE,KAAN,KACE,kBAACC,EAAA,EAAD,CAAMC,SARS,SAAAC,GACnBA,EAAEC,iBACFX,EAASY,YAAcd,MAOjB,kBAACe,EAAA,EAAD,CAAKP,UAAU,0BACb,kBAACQ,EAAA,EAAD,CAAKR,UAAU,OAAOS,GAAG,KACvB,kBAACC,EAAA,EAAD,KACE,kBAACR,EAAA,EAAKS,QAAN,CACEC,YAAY,cACZC,KAAK,OACLC,SAnBK,SAAAV,GACnBX,EAAaW,EAAEW,OAAOC,YAsBd,kBAACR,EAAA,EAAD,CAAKR,UAAU,OAAOS,GAAG,KACvB,kBAACQ,EAAA,EAAD,CAAQjB,UAAU,YAAYkB,QAAQ,OAAOL,KAAK,UAAlD,YAKHjB,EACC,kBAACW,EAAA,EAAD,CAAKP,UAAU,0BACb,sDAEA,Q,qBCqCCmB,MA5Ef,SAAcC,GAAQ,IAAD,EACK7B,mBAAS,IADd,mBACZ8B,EADY,KACNC,EADM,OAEa/B,mBAAS,IAFtB,mBAEZgC,EAFY,KAEFC,EAFE,OAGejC,mBAAS,IAHxB,mBAGZkC,EAHY,KAGDC,EAHC,OAIenC,mBAAS,IAJxB,mBAIZoC,EAJY,KAIDC,EAJC,OAKOrC,mBAAS,IALhB,mBAKZsC,EALY,KAKLC,EALK,OAMSvC,mBAAS,IANlB,mBAMZwC,EANY,KAMJC,EANI,OAOUzC,mBAAS,IAPnB,mBAOZ0C,EAPY,KAOAC,EAPA,KAQbC,EAAOtC,aAAY,SAAAC,GAAK,OAAIA,EAAMqC,QAExCC,qBAAU,WACRC,EAAQF,KACP,CAACA,IAEJ,IAAME,EAAU,SAAC,GAQV,IAPLhB,EAOI,EAPJA,KACAiB,EAMI,EANJA,MACAb,EAKI,EALJA,UACAE,EAII,EAJJA,UACAY,EAGI,EAHJA,aACAC,EAEI,EAFJA,WACAC,EACI,EADJA,IAEAnB,EAAQD,GACRG,EAAYc,GACZZ,EAAaD,GACbG,EAAaD,GACbG,EAASS,GACTP,EAAUQ,GACVN,EAAOO,IAGHC,EAAiB,CACrB,CAAEC,KAAMlB,EAAWmB,KAAM,YAAaC,IAAK,kBAAC,IAAD,OAC3C,CAAEF,KAAMd,EAAOe,KAAM,QAASC,IAAK,kBAAC,IAAD,OACnC,CAAEF,KAAMhB,EAAWiB,KAAM,YAAaC,IAAK,kBAAC,IAAD,QAG7C,OACE,kBAAC9C,EAAA,EAAD,CAAMC,UAAU,aACd,yBAAKA,UAAU,SACb,yBAAK8C,IAAI,MAAMC,IAAKC,EAAQ,QAE9B,kBAACjD,EAAA,EAAKE,KAAN,KACE,yBAAKD,UAAU,UACb,uBAAGiD,KAAI,6BAAwB1B,IAC7B,yBAAKuB,IAAI,MAAM9C,UAAU,qBAAqB+C,IAAKhB,IACnD,wBAAI/B,UAAU,SAASqB,IAEzB,uBAAGrB,UAAU,eAAeuB,IAE9B,uBAAGvB,UAAU,2BAA2BiC,IAE1C,kBAAClC,EAAA,EAAKmD,OAAN,KACE,6BACA,yBAAKlD,UAAU,oBACb,kBAACO,EAAA,EAAD,KACGmC,EAAeS,KAAI,SAACC,EAAIC,GACvB,OACE,kBAAC7C,EAAA,EAAD,CAAK8C,IAAKD,EAAOrD,UAAU,UAAUuD,GAAG,IAAI9C,GAAG,IAAI+C,GAAG,KACpD,kBAACC,EAAA,EAAD,CAAMC,GAAE,sBAAiBnC,EAAjB,YAA6B6B,EAAGR,OACtC,8BACGQ,EAAGP,IACHO,EAAGT,gBCvCXgB,UAtBf,WACE,IAAMjE,EAAWC,cACXwC,EAAOtC,aAAY,SAAAC,GAAK,OAAIA,EAAMqC,QAMxC,OAJAC,qBAAU,WACHwB,OAAOC,KAAK1B,GAAM2B,QAAQpE,EAASY,YAAc,eAItD,kBAACyD,EAAA,EAAD,KACE,kBAACxD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KACN,kBAAC,EAAD,OAEF,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACN,kBAACnB,EAAD,W,gCCvBV,6JAEM0E,EAAY,0BAEX,SAASC,EAASC,GACvB,OAAOC,IAAMC,IAAN,UAAaJ,EAAb,iBAA+BE,IAGjC,SAASG,EAAWH,EAAIvB,GAC7B,OAAOwB,IAAMC,IAAN,UAAaJ,EAAb,iBAA+BE,EAA/B,YAAqCvB,IAGvC,SAAS2B,EAAiBJ,EAAIK,GACnC,OAAOJ,IAAMC,IAAN,UAAaJ,EAAb,iBAA+BE,EAA/B,YAAqCK,IAGvC,SAASC,EAAWN,EAAIK,GAC7B,OAAOJ,IAAMC,IAAN,UAAaJ,EAAb,iBAA+BE,EAA/B,YAAqCK,EAArC,e,gCCjBT,wFAGO,SAASjE,EAAc4D,GAC5B,OAAO,SAAAxE,GACLuE,YAASC,GACNO,MAAK,SAAAC,GAmBZ,IAAyBC,EAlBjBjF,GAkBiBiF,EAlBQD,EAASC,KAmBjC,CACL9D,KAAM+D,IACNC,QAASF,QAnBNG,OAAM,SAAAlF,GACL,OAAQA,EAAM8E,SAASK,QACrB,KAAK,IACHrF,EAASsF,EAAS,6BAClB,MACF,KAAK,IACHtF,EAASsF,EAAS,kBAClB,MACF,QAEE,YADAtF,EAASsF,EAAS,yBAcvB,SAASC,EAAiBtC,EAAMR,GACrC,OAAO,SAAAzC,GACLA,EAAS,CAAEmB,KAAM+D,MACjBP,YAAWlC,EAAMQ,GACd8B,MAAK,SAAAC,GASZ,IAA4BC,EARpBjF,GAQoBiF,EARQD,EAASC,KASpC,CACL9D,KAAM+D,IACNC,QAASF,QATNG,OAAM,SAAAlF,GACLF,EAASsF,EAASpF,QAY1B,SAASoF,EAASL,GAChB,MAAO,CACL9D,KAAM+D,IACNC,QAASF","file":"static/js/7.acec18fe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/damir-bosnjak.a6f24e7d.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, FormGroup, Form, Row, Col } from \"react-bootstrap\";\r\nimport { fetchUserData } from \"../redux/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function Search() {\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const { error } = useSelector(state => ({\r\n    error: state.error\r\n  }));\r\n\r\n  const handleSearch = e => {\r\n    setUserInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(fetchUserData(userInput));\r\n  };\r\n  return (\r\n    <Card className=\"card-user\">\r\n      <h5 className=\"text-center mt-4\">Search user</h5>\r\n      <Card.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row className=\"justify-content-center\">\r\n            <Col className=\"pr-1\" md=\"5\">\r\n              <FormGroup>\r\n                <Form.Control\r\n                  placeholder=\"Github user\"\r\n                  type=\"text\"\r\n                  onChange={handleSearch}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col className=\"px-1\" md=\"3\">\r\n              <Button className=\"btn-round\" variant=\"dark\" type=\"submit\">\r\n                Search\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          {error ? (\r\n            <Row className=\"justify-content-center\">\r\n              <p>No user with this name</p>\r\n            </Row>\r\n          ) : null}\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport { TiUser, TiBook } from \"react-icons/ti\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction User(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [followers, setFollowers] = useState(\"\");\r\n  const [following, setFollowing] = useState(\"\");\r\n  const [repos, setRepos] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [profileBio, setBio] = useState(\"\");\r\n  const user = useSelector(state => state.user);\r\n\r\n  useEffect(() => {\r\n    setData(user);\r\n  }, [user]);\r\n\r\n  const setData = ({\r\n    name,\r\n    login,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    avatar_url,\r\n    bio\r\n  }) => {\r\n    setName(name);\r\n    setUserName(login);\r\n    setFollowers(followers);\r\n    setFollowing(following);\r\n    setRepos(public_repos);\r\n    setAvatar(avatar_url);\r\n    setBio(bio);\r\n  };\r\n\r\n  const cardFooterData = [\r\n    { prop: followers, info: \"followers\", img: <TiUser /> },\r\n    { prop: repos, info: \"repos\", img: <TiBook /> },\r\n    { prop: following, info: \"following\", img: <TiUser /> }\r\n  ];\r\n\r\n  return (\r\n    <Card className=\"card-user\">\r\n      <div className=\"image\">\r\n        <img alt=\"...\" src={require(\"../assets/img/damir-bosnjak.jpg\")} />\r\n      </div>\r\n      <Card.Body>\r\n        <div className=\"author\">\r\n          <a href={`https://github.com/${userName}`}>\r\n            <img alt=\"...\" className=\"avatar border-gray\" src={avatar} />\r\n            <h5 className=\"title\">{name}</h5>\r\n          </a>\r\n          <p className=\"description\">{userName}</p>\r\n        </div>\r\n        <p className=\"description text-center\">{profileBio}</p>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <hr />\r\n        <div className=\"button-container\">\r\n          <Row>\r\n            {cardFooterData.map((el, index) => {\r\n              return (\r\n                <Col key={index} className=\"ml-auto\" lg=\"3\" md=\"6\" xs=\"6\">\r\n                  <Link to={`/git_viewer/${userName}/${el.info}`}>\r\n                    <span>\r\n                      {el.img}\r\n                      {el.prop}\r\n                    </span>\r\n                  </Link>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </div>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport Search from \"./Search\";\r\nimport UserProfile from \"./User\";\r\nimport { fetchUserData } from \"../redux/actions\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction Main() {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state => state.user);\r\n\r\n  useEffect(() => {\r\n    if (!Object.keys(user).length) dispatch(fetchUserData(\"example\"));\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col md=\"4\">\r\n          <UserProfile />\r\n        </Col>\r\n        <Col md=\"8\">\r\n          <Search />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import axios from \"axios\";\r\n\r\nconst githubAPI = \"https://api.github.com/\";\r\n\r\nexport function findUser(id) {\r\n  return axios.get(`${githubAPI}users/${id}`);\r\n}\r\n\r\nexport function getDetails(id, prop) {\r\n  return axios.get(`${githubAPI}users/${id}/${prop}`);\r\n}\r\n\r\nexport function getBranchDetails(id, branch) {\r\n  return axios.get(`${githubAPI}repos/${id}/${branch}`);\r\n}\r\n\r\nexport function getCommits(id, branch) {\r\n  return axios.get(`${githubAPI}repos/${id}/${branch}/commits`);\r\n}\r\n","import * as types from \"./types\";\r\nimport { findUser, getDetails } from \"../services/APIsersices\";\r\n\r\nexport function fetchUserData(id) {\r\n  return dispatch => {\r\n    findUser(id)\r\n      .then(response => {\r\n        dispatch(receiveUserData(response.data));\r\n      })\r\n      .catch(error => {\r\n        switch (error.response.status) {\r\n          case 404:\r\n            dispatch(gotError(\"No user with that email.\"));\r\n            break;\r\n          case 401:\r\n            dispatch(gotError(\"Invalid user.\"));\r\n            break;\r\n          default:\r\n            dispatch(gotError(\"Something wrong\"));\r\n            return;\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nfunction receiveUserData(data) {\r\n  return {\r\n    type: types.RECEIVE_USER_DATA,\r\n    payload: data\r\n  };\r\n}\r\n\r\nexport function fetchUserDetails(prop, user) {\r\n  return dispatch => {\r\n    dispatch({ type: types.SET_PENDING });\r\n    getDetails(user, prop)\r\n      .then(response => {\r\n        dispatch(receiveUserDetails(response.data));\r\n      })\r\n      .catch(error => {\r\n        dispatch(gotError(error));\r\n      });\r\n  };\r\n}\r\n\r\nfunction receiveUserDetails(data) {\r\n  return {\r\n    type: types.RECEIVE_USER_DETAILES,\r\n    payload: data\r\n  };\r\n}\r\n\r\nfunction gotError(data) {\r\n  return {\r\n    type: types.SET_ERROR,\r\n    payload: data\r\n  };\r\n}\r\n"],"sourceRoot":""}