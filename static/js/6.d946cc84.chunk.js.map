{"version":3,"sources":["components/InfoList.js","services/APIsersices.js","redux/actions.js"],"names":["InfoList","props","useSelector","state","userDetails","user","isLoginPending","title","match","params","info","dispatch","useDispatch","useEffect","fetchUserDetails","login","Header","Title","tag","replace","c","toUpperCase","Body","length","className","map","el","index","key","md","xs","href","alt","src","avatar_url","to","default_branch","name","language","githubAPI","fetchUserData","id","axios","get","findUser","then","response","data","type","types","payload","catch","error","status","gotError","prop","getDetails"],"mappings":"0GAAA,+HAOe,SAASA,EAASC,GAAQ,IAAD,EACQC,aAAY,SAAAC,GAAK,MAAK,CAClEC,YAAaD,EAAMC,YACnBC,KAAMF,EAAME,KACZC,eAAgBH,EAAMG,mBAHhBF,EAD8B,EAC9BA,YAAaE,EADiB,EACjBA,eAAgBD,EADC,EACDA,KAK/BE,EAAQN,EAAMO,MAAMC,OAAOC,KAC3BC,EAAWC,cAMjB,OAJAC,qBAAU,WACRF,EAASG,YAAiBP,EAAOF,EAAKU,UACrC,IAECT,EACK,kBAAC,IAAD,MAGL,kBAAC,IAAD,KACE,kBAAC,IAAKU,OAAN,KACE,kBAAC,IAAKC,MAAN,CAAYC,IAAI,MACbX,EAAMY,QAAQ,OAAO,SAAAC,GAAC,OAAIA,EAAEC,mBAGjC,kBAAC,IAAKC,KAAN,KACIlB,EAAYmB,OAGZ,wBAAIC,UAAU,8BACXpB,EAAYqB,KAAI,SAACC,EAAIC,GACpB,OACE,wBAAIC,IAAKD,GACI,UAAVpB,EACC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsB,GAAG,IAAIC,GAAG,KACb,yBAAKN,UAAU,UACb,uBAAGO,KAAI,6BAAwBL,EAAGX,QAChC,yBACEiB,IAAI,MACJR,UAAU,2CACVS,IAAKP,EAAGQ,gBAKhB,kBAAC,IAAD,CAAKL,GAAG,KAAKC,GAAG,MACbJ,EAAGX,QAIR,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMoB,GAAE,kBAAaT,EAAGU,iBACrBV,EAAGW,KAAM,KAEZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKR,GAAG,IAAIC,GAAG,KACb,0BAAMN,UAAU,cACd,iDACA,6BACA,6CAGJ,kBAAC,IAAD,CAAKK,GAAG,IAAIC,GAAG,IAAIN,UAAU,cAC3B,+BAAQE,EAAGU,gBACX,6BACA,+BAAQV,EAAGY,mBAxC7B,4C,6DC9BNC,EAAY,gCCCX,SAASC,EAAcC,GAC5B,OAAO,SAAA9B,IDAF,SAAkB8B,GACvB,OAAOC,IAAMC,IAAN,UAAaJ,GAAb,OAAyBE,KCA9BG,CAASH,GACNI,MAAK,SAAAC,GAmBZ,IAAyBC,EAlBjBpC,GAkBiBoC,EAlBQD,EAASC,KAmBjC,CACLC,KAAMC,IACNC,QAASH,QAnBNI,OAAM,SAAAC,GACL,OAAQA,EAAMN,SAASO,QACrB,KAAK,IACH1C,EAAS2C,EAAS,6BAClB,MACF,KAAK,IACH3C,EAAS2C,EAAS,kBAClB,MACF,QAEE,YADA3C,EAAS2C,EAAS,yBAcvB,SAASxC,EAAiByC,EAAMlD,GACrC,OAAO,SAAAM,GACLA,EAAS,CAAEqC,KAAMC,MD1Bd,SAAoBR,EAAIc,GAC7B,OAAOb,IAAMC,IAAN,UAAaJ,GAAb,OAAyBE,EAAzB,YAA+Bc,IC0BpCC,CAAWnD,EAAMkD,GACdV,MAAK,SAAAC,GASZ,IAA4BC,EARpBpC,GAQoBoC,EARQD,EAASC,KASpC,CACLC,KAAMC,IACNC,QAASH,QATNI,OAAM,SAAAC,GACLzC,EAAS2C,EAASF,QAY1B,SAASE,EAASP,GAChB,MAAO,CACLC,KAAMC,IACNC,QAASH,GAvDb","file":"static/js/6.d946cc84.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUserDetails } from \"../redux/actions\";\r\nimport Loader from \"../App/layout/Loader/index\";\r\n\r\nexport default function InfoList(props) {\r\n  const { userDetails, isLoginPending, user } = useSelector(state => ({\r\n    userDetails: state.userDetails,\r\n    user: state.user,\r\n    isLoginPending: state.isLoginPending\r\n  }));\r\n  const title = props.match.params.info;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserDetails(title, user.login));\r\n  }, []);\r\n\r\n  if (isLoginPending) {\r\n    return <Loader />;\r\n  } else {\r\n    return (\r\n      <Card>\r\n        <Card.Header>\r\n          <Card.Title tag=\"h4\">\r\n            {title.replace(/^\\w/, c => c.toUpperCase())}\r\n          </Card.Title>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          {!userDetails.length ? (\r\n            <div>No data</div>\r\n          ) : (\r\n            <ul className=\"list-unstyled team-members\">\r\n              {userDetails.map((el, index) => {\r\n                return (\r\n                  <li key={index}>\r\n                    {title !== \"repos\" ? (\r\n                      <Row>\r\n                        <Col md=\"2\" xs=\"2\">\r\n                          <div className=\"avatar\">\r\n                            <a href={`https://github.com/${el.login}`}>\r\n                              <img\r\n                                alt=\"...\"\r\n                                className=\"img-circle img-no-padding img-responsive\"\r\n                                src={el.avatar_url}\r\n                              />\r\n                            </a>\r\n                          </div>\r\n                        </Col>\r\n                        <Col md=\"10\" xs=\"10\">\r\n                          {el.login}\r\n                        </Col>\r\n                      </Row>\r\n                    ) : (\r\n                      <Row>\r\n                        <Col>\r\n                          <Link to={`/branch/${el.default_branch}`}>\r\n                            {el.name}{\" \"}\r\n                          </Link>\r\n                          <Row>\r\n                            <Col md=\"5\" xs=\"5\">\r\n                              <span className=\"text-muted\">\r\n                                <small>Default branch</small>\r\n                                <br />\r\n                                <small>Language</small>\r\n                              </span>\r\n                            </Col>\r\n                            <Col md=\"7\" xs=\"7\" className=\"text-right\">\r\n                              <small>{el.default_branch}</small>\r\n                              <br />\r\n                              <small>{el.language}</small>\r\n                            </Col>\r\n                          </Row>\r\n                        </Col>\r\n                      </Row>\r\n                    )}\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst githubAPI = \"https://api.github.com/users/\";\r\n\r\nexport function findUser(id) {\r\n  return axios.get(`${githubAPI}${id}`);\r\n}\r\n\r\nexport function getDetails(id, prop) {\r\n  return axios.get(`${githubAPI}${id}/${prop}`);\r\n}\r\n","import * as types from \"./types\";\r\nimport { findUser, getDetails } from \"../services/APIsersices\";\r\n\r\nexport function fetchUserData(id) {\r\n  return dispatch => {\r\n    findUser(id)\r\n      .then(response => {\r\n        dispatch(receiveUserData(response.data));\r\n      })\r\n      .catch(error => {\r\n        switch (error.response.status) {\r\n          case 404:\r\n            dispatch(gotError(\"No user with that email.\"));\r\n            break;\r\n          case 401:\r\n            dispatch(gotError(\"Invalid user.\"));\r\n            break;\r\n          default:\r\n            dispatch(gotError(\"Something wrong\"));\r\n            return;\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nfunction receiveUserData(data) {\r\n  return {\r\n    type: types.RECEIVE_USER_DATA,\r\n    payload: data\r\n  };\r\n}\r\n\r\nexport function fetchUserDetails(prop, user) {\r\n  return dispatch => {\r\n    dispatch({ type: types.SET_PENDING });\r\n    getDetails(user, prop)\r\n      .then(response => {\r\n        dispatch(receiveUserDetails(response.data));\r\n      })\r\n      .catch(error => {\r\n        dispatch(gotError(error));\r\n      });\r\n  };\r\n}\r\n\r\nfunction receiveUserDetails(data) {\r\n  return {\r\n    type: types.RECEIVE_USER_DETAILES,\r\n    payload: data\r\n  };\r\n}\r\n\r\nfunction gotError(data) {\r\n  return {\r\n    type: types.SET_ERROR,\r\n    payload: data\r\n  };\r\n}\r\n"],"sourceRoot":""}