{"version":3,"sources":["assets/img/damir-bosnjak.jpg","components/Search.tsx","components/User/UserCardBody.tsx","components/User/UserCardFooter.tsx","components/User/UserCard.tsx","components/Main.tsx","redux/actions.tsx","services/APIsersices.tsx"],"names":["module","exports","Search","useState","userInput","setUserInput","error","useSelector","state","userReducer","dispatch","useDispatch","Card","className","Body","Form","onSubmit","e","preventDefault","fetchUserData","Row","Col","md","FormGroup","Control","placeholder","type","onChange","target","value","Button","variant","UserCardBody","useContext","UserContext","login","name","bio","avatar_url","href","alt","src","UserCardFooter","followers","following","public_repos","cardFooterData","prop","info","img","Footer","map","el","index","key","lg","xs","to","React","createContext","UserCard","userData","setUserData","user","useEffect","require","Provider","Main","Object","keys","length","Container","id","findUser","then","response","data","types","payload","catch","status","gotError","fetchUserDetails","getDetails","githubAPI","axios","get","getCommits","repo","branch","getBranches"],"mappings":"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","file":"static/js/5.0b359e87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/damir-bosnjak.a6f24e7d.jpg\";","import React, { useState } from \"react\";\r\nimport { Button, Card, FormGroup, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUserData } from \"../redux/actions\";\r\nimport { RootState } from \"../redux\";\r\n\r\nconst Search: React.FC = () => {\r\n  const [userInput, setUserInput] = useState<string>(\"\");\r\n  const { error } = useSelector((state: RootState) => state.userReducer);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\r\n    e.preventDefault();\r\n    dispatch(fetchUserData(userInput));\r\n  };\r\n\r\n  return (\r\n    <Card className=\"card-user\">\r\n      <h5 className=\"text-center mt-4\">Search user</h5>\r\n      <Card.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row className=\"justify-content-center\">\r\n            <Col className=\"pr-1\" md=\"5\">\r\n              <FormGroup>\r\n                <Form.Control\r\n                  placeholder=\"Github user\"\r\n                  type=\"text\"\r\n                  onChange={e => setUserInput(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col className=\"px-1\" md=\"3\">\r\n              <Button className=\"btn-round\" variant=\"dark\" type=\"submit\">\r\n                Search\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          {error ? <Row className=\"justify-content-center\">{error}</Row> : null}\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Search","import React, { useContext } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { UserContext } from \"./UserCard\";\r\n\r\nconst defaultUserAvatar =\"https://avatars2.githubusercontent.com/u/57936?s=460&v=4\";\r\n\r\nexport default function UserCardBody() {\r\n  const { login, name, bio, avatar_url } = useContext(UserContext);\r\n\r\n  return (\r\n    <Card.Body>\r\n      <div className=\"author\">\r\n        <a href={`https://github.com/${login}`}>\r\n          <img\r\n            alt=\"...\"\r\n            className=\"avatar border-gray\"\r\n            src={avatar_url ? avatar_url : defaultUserAvatar}\r\n          />\r\n          <h5 className=\"title\">{login}</h5>\r\n        </a>\r\n        <p className=\"description\">{name}</p>\r\n      </div>\r\n      <p className=\"description text-center\">{bio}</p>\r\n    </Card.Body>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport { TiUser, TiBook } from \"react-icons/ti\";\r\nimport { UserContext } from \"./UserCard\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function UserCardFooter() {\r\n  const { login, followers, following, public_repos } = useContext(UserContext);\r\n\r\n  const cardFooterData = [\r\n    { prop: followers, info: \"followers\", img: <TiUser /> },\r\n    { prop: public_repos, info: \"repos\", img: <TiBook /> },\r\n    { prop: following, info: \"following\", img: <TiUser /> },\r\n  ];\r\n  \r\n  return (\r\n    <Card.Footer>\r\n      <hr />\r\n      <div className=\"button-container\">\r\n        <Row>\r\n          {cardFooterData.map((el, index) => {\r\n            return (\r\n              <Col key={index} className=\"ml-auto\" lg=\"3\" md=\"6\" xs=\"6\">\r\n                <Link to={`/${login}/${el.info}`}>\r\n                  <span>\r\n                    {el.img}\r\n                    {el.prop}\r\n                  </span>\r\n                </Link>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </div>\r\n    </Card.Footer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { TiUser, TiBook } from \"react-icons/ti\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../redux\";\r\nimport { User as UserType } from \"../../models/interfaces\";\r\nimport UserCardBody from \"./UserCardBody\";\r\nimport UserCardFooter from \"./UserCardFooter\";\r\n\r\nexport const UserContext = React.createContext<Partial<UserType>>({});\r\n\r\nconst UserCard: React.FC = () => {\r\n  const [userData, setUserData] = useState({} as UserType);\r\n  const { user } = useSelector((state: RootState) => state.userReducer);\r\n\r\n  useEffect(() => {\r\n    setUserData(user);\r\n  }, [user]);\r\n\r\n  const cardFooterData = [\r\n    { prop: userData.followers, info: \"followers\", img: <TiUser /> },\r\n    { prop: userData.public_repos, info: \"repos\", img: <TiBook /> },\r\n    { prop: userData.following, info: \"following\", img: <TiUser /> },\r\n  ];\r\n\r\n  return (\r\n    <Card className=\"card-user\">\r\n      <div className=\"image\">\r\n        <img alt=\"...\" src={require(\"../../assets/img/damir-bosnjak.jpg\")} />\r\n      </div>\r\n      <UserContext.Provider value={userData}>\r\n        <UserCardBody />\r\n        <UserCardFooter />\r\n      </UserContext.Provider>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React, { useEffect } from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Search from \"./Search\";\r\nimport UserCard from \"./User/UserCard\";\r\nimport { fetchUserData } from \"../redux/actions\";\r\nimport { RootState } from \"../redux\";\r\n\r\n\r\nconst Main: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector((state: RootState) => state.userReducer);\r\n\r\n  useEffect(() => {\r\n    if (!user || !Object.keys(user).length) dispatch(fetchUserData(\"example\"));\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"align-items-stretch\">\r\n        <Col md=\"4\">\r\n          <UserCard />\r\n        </Col>\r\n        <Col md=\"8\">\r\n          <Search />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import * as types from \"./types\";\r\nimport { findUser, getDetails } from \"../services/APIsersices\";\r\n\r\nexport function fetchUserData(id: string) {\r\n  return dispatch => {\r\n    findUser(id)\r\n      .then(response => {\r\n        dispatch(receiveUserData(response.data));\r\n      })\r\n      .catch(error => {\r\n        switch (error.response.status) {\r\n          case 404:\r\n            dispatch(gotError(\"No user with that email.\"));\r\n            break;\r\n          case 401:\r\n            dispatch(gotError(\"Invalid user.\"));\r\n            break;\r\n          default:\r\n            dispatch(gotError(\"Something wrong\"));\r\n            return;\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nfunction receiveUserData(data: any) {\r\n  return {\r\n    type: types.RECEIVE_USER_DATA,\r\n    payload: data\r\n  };\r\n}\r\n\r\nexport function fetchUserDetails(prop: string, user: string) {\r\n  return (dispatch) => {\r\n    dispatch({ type: types.SET_PENDING });\r\n    getDetails(user, prop)\r\n      .then(response => {\r\n        dispatch(receiveUserDetails(response.data));\r\n      })\r\n      .catch(error => {\r\n        dispatch(gotError(error));\r\n      });\r\n  };\r\n}\r\n\r\nfunction receiveUserDetails(data: any): types.Action {\r\n  return {\r\n    type: types.RECEIVE_USER_DETAILES,\r\n    payload: data\r\n  };\r\n}\r\n\r\nfunction gotError(data: string): types.Action {\r\n  return {\r\n    type: types.SET_ERROR,\r\n    payload: data\r\n  };\r\n}\r\n","import axios from \"axios\";\r\nimport {\r\n  User,\r\n  ServerResponse,\r\n  UserDetails,\r\n  Commit,\r\n  Branch\r\n} from \"../models/interfaces\";\r\n\r\nconst githubAPI = \"https://api.github.com/\";\r\n\r\nexport function findUser(id: string): Promise<ServerResponse<User>> {\r\n  return axios.get(`${githubAPI}users/${id}`);\r\n}\r\n\r\nexport function getDetails(\r\n  id: string,\r\n  prop: string\r\n): Promise<ServerResponse<Array<UserDetails>>> {\r\n  return axios.get(`${githubAPI}users/${id}/${prop}`);\r\n}\r\n\r\nexport function getCommits(\r\n  id: string,\r\n  repo: string,\r\n  branch:string\r\n): Promise<ServerResponse<Array<Commit>>> {\r\n  return axios.get(`${githubAPI}repos/${id}/${repo}/commits?sha=${branch}`);\r\n}\r\n\r\nexport function getBranches(\r\n  id: string,\r\n  repo: string\r\n): Promise<ServerResponse<Array<Branch>>> {\r\n  return axios.get(`${githubAPI}repos/${id}/${repo}/branches`);\r\n}\r\n\r\nexport function getBranchesDiff(\r\n  id: string,\r\n  repo: string,\r\n  firstBranch: string,\r\n  secondBranch: string\r\n): Promise<ServerResponse<Object>> {\r\n  return axios.get(`${githubAPI}repos/${id}/${repo}/compare/${firstBranch}...${secondBranch}`);\r\n}"],"sourceRoot":""}