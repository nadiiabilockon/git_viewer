{"version":3,"sources":["assets/img/damir-bosnjak.jpg","components/Search.js","components/User.js","components/Main.js","services/APIsersices.js","redux/actions.js","components/InfoList.js"],"names":["module","exports","Search","useState","userInput","setUserInput","dispatch","useDispatch","Card","className","Header","Title","tag","Body","Form","onSubmit","e","preventDefault","fetchUserData","Row","Col","md","FormGroup","Control","placeholder","type","onChange","target","value","Button","color","User","props","name","setName","userName","setUserName","followers","setFollowers","following","setFollowing","repos","setRepos","avatar","setAvatar","profileBio","setBio","user","useSelector","state","useEffect","setData","login","public_repos","avatar_url","bio","cardFooterData","prop","info","img","alt","src","require","href","Footer","map","el","index","key","lg","xs","Link","to","Main","Container","githubAPI","id","axios","get","findUser","then","response","data","types","payload","catch","error","status","console","log","fetchUserDetails","store","getState","InfoList","userDetails"],"mappings":"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","file":"static/js/5.209c6670.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/damir-bosnjak.a6f24e7d.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Card, FormGroup, Form, Row, Col } from \"react-bootstrap\";\r\nimport { fetchUserData } from \"../redux/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function Search() {\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSearch = e => {\r\n    setUserInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(fetchUserData(userInput));\r\n    // axios\r\n    //   .get(`${githubAPI}${userInput}`)\r\n    //   .then(data => {\r\n    //     setData(data.data);\r\n    //   })\r\n    //   .catch(function(error) {\r\n    //     // handle error\r\n    //     console.log(error);\r\n    //     setError(\"Not found\");\r\n    //   });\r\n  };\r\n  return (\r\n    <Card className=\"card-user\">\r\n      <Card.Header>\r\n        <Card.Title tag=\"h5\">Search user</Card.Title>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Row>\r\n            <Col className=\"pr-1\" md=\"5\">\r\n              <FormGroup>\r\n                <Form.Control\r\n                  placeholder=\"Github user\"\r\n                  type=\"text\"\r\n                  onChange={handleSearch}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col className=\"px-1\" md=\"3\">\r\n              <Button className=\"btn-round\" color=\"primary\" type=\"submit\">\r\n                Search\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Row, Col, Button } from \"react-bootstrap\";\r\nimport { TiUser, TiBook } from \"react-icons/ti\";\r\nimport InfoList from \"./InfoList\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction User(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [followers, setFollowers] = useState(\"\");\r\n  const [following, setFollowing] = useState(\"\");\r\n  const [repos, setRepos] = useState(\"\");\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [profileBio, setBio] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [info, setInfo] = useState([]);\r\n  const [show, toggleShow] = useState(false);\r\n  const user = useSelector(state => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setData(user);\r\n  }, [user]);\r\n\r\n  const setData = ({\r\n    name,\r\n    login,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    avatar_url,\r\n    bio\r\n  }) => {\r\n    setName(name);\r\n    setUserName(login);\r\n    setFollowers(followers);\r\n    setFollowing(following);\r\n    setRepos(public_repos);\r\n    setAvatar(avatar_url);\r\n    setBio(bio);\r\n  };\r\n\r\n  // const handleInfo = params => {\r\n  //   axios\r\n  //     .get(`${githubAPI}${userName}/${params}`)\r\n  //     .then(data => {\r\n  //       setInfo(data.data);\r\n  //       toggleShow(params);\r\n  //     })\r\n  //     .catch(function(error) {\r\n  //       console.log(error);\r\n  //     });\r\n  // };\r\n\r\n  const cardFooterData = [\r\n    { prop: followers, info: \"followers\", img: <TiUser /> },\r\n    { prop: repos, info: \"repos\", img: <TiBook /> },\r\n    { prop: following, info: \"following\", img: <TiUser /> }\r\n  ];\r\n\r\n  return (\r\n    <Card className=\"card-user\">\r\n      <div className=\"image\">\r\n        <img alt=\"...\" src={require(\"../assets/img/damir-bosnjak.jpg\")} />\r\n      </div>\r\n      <Card.Body>\r\n        <div className=\"author\">\r\n          <a href={`https://github.com/${userName}`}>\r\n            <img alt=\"...\" className=\"avatar border-gray\" src={avatar} />\r\n            <h5 className=\"title\">{name}</h5>\r\n          </a>\r\n          <p className=\"description\">{userName}</p>\r\n        </div>\r\n        <p className=\"description text-center\">{profileBio}</p>\r\n      </Card.Body>\r\n      <Card.Footer>\r\n        <hr />\r\n        <div className=\"button-container\">\r\n          <Row>\r\n            {cardFooterData.map((el, index) => {\r\n              return (\r\n                <Col key={index} className=\"ml-auto\" lg=\"3\" md=\"6\" xs=\"6\">\r\n                  <span>\r\n                    {el.img}\r\n                    {el.prop}\r\n                  </span>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </div>\r\n        <div className=\"text-center mt-3\">\r\n          <Link to={`/git_viewer/user/info`}>More Info</Link>\r\n        </div>\r\n      </Card.Footer>\r\n      {/* {show ? <InfoList info={info} header={show} /> : null} */}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default User;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport Search from \"./Search\";\r\nimport UserProfile from \"./User\";\r\nimport { fetchUserData } from \"../redux/actions\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction Main() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserData('example'));\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col md=\"4\">\r\n          <UserProfile />\r\n        </Col>\r\n        <Col md=\"8\">\r\n          <Search />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import axios from \"axios\";\r\n\r\nconst githubAPI = \"https://api.github.com/users/\";\r\n\r\nexport function findUser(id) {\r\n  return axios.get(`${githubAPI}${id}`);\r\n}\r\n\r\nexport function getDetails(id) {\r\n  return axios.get(`${githubAPI}${id}`);\r\n}\r\n","import * as types from './types';\r\nimport { findUser, getDetails } from \"../services/APIsersices\";\r\nimport {store} from \"../index\";\r\n\r\nexport function fetchUserData(id) {\r\n  return dispatch => {\r\n    findUser(id)\r\n      .then(response => {\r\n        dispatch(receiveUserData(response.data));\r\n      })\r\n      .catch(error => {\r\n        switch (error.response.status) {\r\n          case 404:\r\n            console.log(\"No user with that email.\");\r\n            break;\r\n          case 401:\r\n            console.log(\"Invalid user.\");\r\n            break;\r\n          default:\r\n            console.log(\"There was an error loggin in\");\r\n            return;\r\n        }\r\n      });\r\n  };\r\n}\r\n\r\nfunction receiveUserData(data) {\r\n  return {\r\n    type: types.RECEIVE_USER_DATA,\r\n    payload: data\r\n  };\r\n}\r\n\r\nexport function fetchUserDetails() {\r\n  const user = store.getState().user.login;\r\n         return dispatch => {\r\n           getDetails(user)\r\n             .then(response => {\r\n               dispatch(receiveUserDetails(response.data));\r\n             })\r\n             .catch(error => {\r\n               switch (error.response.status) {\r\n                 case 404:\r\n                   console.log(\"No user with that email.\");\r\n                   break;\r\n                 case 401:\r\n                   console.log(\"Invalid user.\");\r\n                   break;\r\n                 default:\r\n                   console.log(\"There was an error loggin in\");\r\n                   return;\r\n               }\r\n             });\r\n         };\r\n       }\r\n\r\nfunction receiveUserDetails(data) {\r\n  return {\r\n    type: types.RECEIVE_USER_DETAILES,\r\n    payload: data\r\n  };\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchUserDetails } from \"../redux/actions\";\r\n\r\nexport default function InfoList(props) {\r\n  const userDetails = useSelector(state => state.userDetails);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUserDetails());\r\n  }, [userDetails]);\r\n\r\n  // const handleInfo = params => {\r\n  //   axios\r\n  //     .get(`${githubAPI}${userName}/${params}`)\r\n  //     .then(data => {\r\n  //       setInfo(data.data);\r\n  //       toggleShow(params);\r\n  //     })\r\n  //     .catch(function(error) {\r\n  //       console.log(error);\r\n  //     });\r\n  // };\r\n  return (\r\n    <Card>\r\n      <Card.Header>\r\n        <Card.Title tag=\"h4\">\r\n          {/* {props.header.replace(/^\\w/, c => c.toUpperCase())} */}\r\n        </Card.Title>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <ul className=\"list-unstyled team-members\">\r\n          {/* {props.info.map((el, index) => {\r\n            return (\r\n              <li key={index}>\r\n                {props.header !== \"repos\" ? (\r\n                  <Row>\r\n                    <Col md=\"2\" xs=\"2\">\r\n                      <div className=\"avatar\">\r\n                        <img\r\n                          alt=\"...\"\r\n                          className=\"img-circle img-no-padding img-responsive\"\r\n                          src={el.avatar_url}\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                    <Col md=\"7\" xs=\"7\">\r\n                      {el.login}\r\n                    </Col>\r\n                  </Row>\r\n                ) : (\r\n                  <Row>\r\n                    <Col>\r\n                      <Link to={`/branch/${el.default_branch}`}>\r\n                        {el.name}{\" \"}\r\n                      </Link>\r\n                      <Row>\r\n                        <Col md=\"5\" xs=\"5\">\r\n                          <span className=\"text-muted\">\r\n                            <small>Default branch</small>\r\n                            <br />\r\n                            <small>Language</small>\r\n                          </span>\r\n                        </Col>\r\n                        <Col md=\"7\" xs=\"7\" className=\"text-right\">\r\n                          <small>{el.default_branch}</small>\r\n                          <br />\r\n                          <small>{el.language}</small>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                )}\r\n              </li>\r\n            );\r\n          })} */}\r\n        </ul>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n"],"sourceRoot":""}